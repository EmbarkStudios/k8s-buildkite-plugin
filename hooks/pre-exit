#!/bin/bash

set -euo pipefail

job_name="$(cat /tmp/job_name)"

echo "--- :kubernetes: Cleanup"

readonly job_cleanup_after_finished_via_plugin="${BUILDKITE_PLUGIN_K8S_JOB_CLEANUP_AFTER_FINISHED_VIA_PLUGIN:-}"
readonly job_cleanup_retry_sec="${BUILDKITE_PLUGIN_K8S_JOB_CLEANUP_RETRY_INTERVAL_SEC:-5}"
readonly job_cleanup_timeout_sec="${BUILDKITE_PLUGIN_K8S_JOB_CLEANUP_TIMEOUT_SEC:-60}"
readonly job_cleanup_start_time="$SECONDS"

if [[ "$job_cleanup_after_finished_via_plugin" != "true" ]]; then
  exit 0
fi

job_cleanup_exit_code=""
while [[ "$((SECONDS - job_cleanup_start_time))" -lt "$job_cleanup_timeout_sec" ]]
do
  set +e
  pod=$(kubectl get pod --output=name -l "job-name=${job_name}")
  if [[ -n "${pod}" ]] ; then
    kubectl patch --patch '{"spec":{"activeDeadlineSeconds":1}}' "${pod}"
  fi
  kubectl patch --patch '{"spec":{"activeDeadlineSeconds":1}}' "job/${job_name}"
  job_cleanup_exit_code="$?"
  set -e

  if [[ "$job_cleanup_exit_code" == "0" ]]; then
    break
  else
    echo "Attempt to cleanup the job failed, exit code '$job_cleanup_exit_code'"
    sleep "$job_cleanup_retry_sec"
  fi
done

echo "Job cleanup exit code '$job_cleanup_exit_code'"
