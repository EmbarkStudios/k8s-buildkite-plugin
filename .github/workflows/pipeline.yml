---
name: Pipeline

on:
  pull_request:
  push:
    branches:
      - '*'

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    name: Check Shell Scripts

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check Hooks
        uses: ludeeus/action-shellcheck@master
        with:
          scandir: './hooks'

  image:
    runs-on: ubuntu-latest
    name: Build Docker Image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: '${{ secrets.GH_PUSH_TOKEN }}'

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build Image
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: 'muhlba91/builkite-agent-k8s:latest'

  tag:
    runs-on: ubuntu-latest
    name: Tag Release
    if: github.ref == 'refs/heads/main'
    needs:
      - shellcheck
      - image
    strategy:
      max-parallel: 4
      matrix:
        node-version: [ '16' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: '${{ secrets.GH_PUSH_TOKEN }}'

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup Git
        run: |
          git config --local user.email "${{ env.GITHUB_ACTION }}+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git fetch --tags

      - name: Versioning and Changelog
        run: |
          npx standard-version -i release-CHANGELOG.md --skip.commit --skip.tag
          npx standard-version
          git push --follow-tags
          echo "TAG_NAME=`git describe --abbrev=0 --match "v*"`" >> $GITHUB_ENV

      - name: GitHub Release
        uses: ncipollo/release-action@v1
        with:
          bodyFile: "release-CHANGELOG.md"
          name: '${{ env.TAG_NAME }}'
          tag: '${{ env.TAG_NAME }}'
          token: '${{ secrets.GITHUB_TOKEN }}'
          prerelease: ${{ github.ref == 'refs/heads/next' }}
